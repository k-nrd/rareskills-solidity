{"abi":[{"type":"function","name":"getStorageAt","inputs":[{"name":"offset","type":"uint256","internalType":"uint256"},{"name":"length","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"simulateAndRevert","inputs":[{"name":"targetContract","type":"address","internalType":"address"},{"name":"calldataPayload","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x6080604052348015600f57600080fd5b506102cc8061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80635624b25b1461003b578063b4faba0914610064575b600080fd5b61004e61004936600461011a565b610079565b60405161005b919061013c565b60405180910390f35b6100776100723660046101a1565b6100f7565b005b60606000610088836020610271565b67ffffffffffffffff8111156100a0576100a061018b565b6040519080825280601f01601f1916602001820160405280156100ca576020820181803683370190505b50905060005b838110156100ed57848101546020808302840101526001016100d0565b5090505b92915050565b600080825160208401855af480600052503d6020523d600060403e60403d016000fd5b6000806040838503121561012d57600080fd5b50508035926020909101359150565b60006020808352835180602085015260005b8181101561016a5785810183015185820160400152820161014e565b506000604082860101526040601f19601f8301168501019250505092915050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156101b457600080fd5b82356001600160a01b03811681146101cb57600080fd5b9150602083013567ffffffffffffffff808211156101e857600080fd5b818501915085601f8301126101fc57600080fd5b81358181111561020e5761020e61018b565b604051601f8201601f19908116603f011681019083821181831017156102365761023661018b565b8160405282815288602084870101111561024f57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b80820281158282048414176100f157634e487b7160e01b600052601160045260246000fdfea2646970667358221220434288c188e15a485b24dab131cfca8e127b30fac0c040431031b9ca956b506764736f6c63430008190033","sourceMap":"315:1913:36:-:0;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561001057600080fd5b50600436106100365760003560e01c80635624b25b1461003b578063b4faba0914610064575b600080fd5b61004e61004936600461011a565b610079565b60405161005b919061013c565b60405180910390f35b6100776100723660046101a1565b6100f7565b005b60606000610088836020610271565b67ffffffffffffffff8111156100a0576100a061018b565b6040519080825280601f01601f1916602001820160405280156100ca576020820181803683370190505b50905060005b838110156100ed57848101546020808302840101526001016100d0565b5090505b92915050565b600080825160208401855af480600052503d6020523d600060403e60403d016000fd5b6000806040838503121561012d57600080fd5b50508035926020909101359150565b60006020808352835180602085015260005b8181101561016a5785810183015185820160400152820161014e565b506000604082860101526040601f19601f8301168501019250505092915050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156101b457600080fd5b82356001600160a01b03811681146101cb57600080fd5b9150602083013567ffffffffffffffff808211156101e857600080fd5b818501915085601f8301126101fc57600080fd5b81358181111561020e5761020e61018b565b604051601f8201601f19908116603f011681019083821181831017156102365761023661018b565b8160405282815288602084870101111561024f57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b80820281158282048414176100f157634e487b7160e01b600052601160045260246000fdfea2646970667358221220434288c188e15a485b24dab131cfca8e127b30fac0c040431031b9ca956b506764736f6c63430008190033","sourceMap":"315:1913:36:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;643:464;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1740:486;;;;;;:::i;:::-;;:::i;:::-;;643:464;718:12;742:19;774:11;:6;783:2;774:11;:::i;:::-;764:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;764:22:36;;742:44;;801:13;796:282;828:6;820:5;:14;796:282;;;964:18;;;958:25;1041:4;1030:16;;;1007:40;;;1000:54;836:7;;796:282;;;-1:-1:-1;1094:6:36;-1:-1:-1;643:464:36;;;;;:::o;1740:486::-;2025:1;2022;2004:15;1998:22;1991:4;1974:15;1970:26;1954:14;1947:5;1934:93;2054:7;2048:4;2041:21;;2088:16;2082:4;2075:30;2142:16;2139:1;2133:4;2118:41;2204:4;2186:16;2182:27;2179:1;2172:38;14:248:49;82:6;90;143:2;131:9;122:7;118:23;114:32;111:52;;;159:1;156;149:12;111:52;-1:-1:-1;;182:23:49;;;252:2;237:18;;;224:32;;-1:-1:-1;14:248:49:o;267:546::-;377:4;406:2;435;424:9;417:21;467:6;461:13;510:6;505:2;494:9;490:18;483:34;535:1;545:140;559:6;556:1;553:13;545:140;;;654:14;;;650:23;;644:30;620:17;;;639:2;616:26;609:66;574:10;;545:140;;;549:3;734:1;729:2;720:6;709:9;705:22;701:31;694:42;804:2;797;793:7;788:2;780:6;776:15;772:29;761:9;757:45;753:54;745:62;;;;267:546;;;;:::o;818:127::-;879:10;874:3;870:20;867:1;860:31;910:4;907:1;900:15;934:4;931:1;924:15;950:1095;1027:6;1035;1088:2;1076:9;1067:7;1063:23;1059:32;1056:52;;;1104:1;1101;1094:12;1056:52;1130:23;;-1:-1:-1;;;;;1182:31:49;;1172:42;;1162:70;;1228:1;1225;1218:12;1162:70;1251:5;-1:-1:-1;1307:2:49;1292:18;;1279:32;1330:18;1360:14;;;1357:34;;;1387:1;1384;1377:12;1357:34;1425:6;1414:9;1410:22;1400:32;;1470:7;1463:4;1459:2;1455:13;1451:27;1441:55;;1492:1;1489;1482:12;1441:55;1528:2;1515:16;1550:2;1546;1543:10;1540:36;;;1556:18;;:::i;:::-;1631:2;1625:9;1599:2;1685:13;;-1:-1:-1;;1681:22:49;;;1705:2;1677:31;1673:40;1661:53;;;1729:18;;;1749:22;;;1726:46;1723:72;;;1775:18;;:::i;:::-;1815:10;1811:2;1804:22;1850:2;1842:6;1835:18;1890:7;1885:2;1880;1876;1872:11;1868:20;1865:33;1862:53;;;1911:1;1908;1901:12;1862:53;1967:2;1962;1958;1954:11;1949:2;1941:6;1937:15;1924:46;2012:1;2007:2;2002;1994:6;1990:15;1986:24;1979:35;2033:6;2023:16;;;;;;;950:1095;;;;;:::o;2050:265::-;2123:9;;;2154;;2171:15;;;2165:22;;2151:37;2141:168;;2231:10;2226:3;2222:20;2219:1;2212:31;2266:4;2263:1;2256:15;2294:4;2291:1;2284:15","linkReferences":{}},"methodIdentifiers":{"getStorageAt(uint256,uint256)":"5624b25b","simulateAndRevert(address,bytes)":"b4faba09"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"getStorageAt\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"targetContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"calldataPayload\",\"type\":\"bytes\"}],\"name\":\"simulateAndRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getStorageAt(uint256,uint256)\":{\"details\":\"Reads `length` bytes of storage in the currents contract\",\"params\":{\"length\":\"- the number of words (32 bytes) of data to read\",\"offset\":\"- the offset in the current contract's storage in words to start reading from\"},\"returns\":{\"_0\":\"the bytes that were read.\"}},\"simulateAndRevert(address,bytes)\":{\"details\":\"Performs a delegatecall on a targetContract in the context of self. Internally reverts execution to avoid side effects (making it static). This method reverts with data equal to `abi.encode(bool(success), bytes(response))`. Specifically, the `returndata` after a call to this method will be: `success:bool || response.length:uint256 || response:bytes`.\",\"params\":{\"calldataPayload\":\"Calldata that should be sent to the target contract (encoded method name and arguments).\",\"targetContract\":\"Address of the contract containing the code to execute.\"}}},\"title\":\"StorageAccessible - generic base contract that allows callers to access all internal storage.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"See https://github.com/gnosis/util-contracts/blob/bb5fe5fb5df6d8400998094fb1b32a178a47c3a1/contracts/StorageAccessible.sol\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/safe-smart-account/contracts/common/StorageAccessible.sol\":\"StorageAccessible\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/solmate/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-smart-account/=lib/safe-smart-account/contracts/\",\":solady/=lib/solady/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/safe-smart-account/contracts/common/StorageAccessible.sol\":{\"keccak256\":\"0x40a5f239d9639d4e44cb195a8a2a0022bb27840e282990e6776d8581515ca7ed\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://22fa3b633e76e7d58736c841730a05f2c37a09f612e7e90dfd6c1f35722a9157\",\"dweb:/ipfs/QmTFhMtHEKkdzQdVN9gayKdEJY69HWoM7abW2dXEuWXF6i\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.25+commit.b61c2a91"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"offset","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"stateMutability":"view","type":"function","name":"getStorageAt","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"address","name":"targetContract","type":"address"},{"internalType":"bytes","name":"calldataPayload","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"simulateAndRevert"}],"devdoc":{"kind":"dev","methods":{"getStorageAt(uint256,uint256)":{"details":"Reads `length` bytes of storage in the currents contract","params":{"length":"- the number of words (32 bytes) of data to read","offset":"- the offset in the current contract's storage in words to start reading from"},"returns":{"_0":"the bytes that were read."}},"simulateAndRevert(address,bytes)":{"details":"Performs a delegatecall on a targetContract in the context of self. Internally reverts execution to avoid side effects (making it static). This method reverts with data equal to `abi.encode(bool(success), bytes(response))`. Specifically, the `returndata` after a call to this method will be: `success:bool || response.length:uint256 || response:bytes`.","params":{"calldataPayload":"Calldata that should be sent to the target contract (encoded method name and arguments).","targetContract":"Address of the contract containing the code to execute."}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/solmate/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","safe-smart-account/=lib/safe-smart-account/contracts/","solady/=lib/solady/src/","solmate/=lib/solmate/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/safe-smart-account/contracts/common/StorageAccessible.sol":"StorageAccessible"},"evmVersion":"paris","libraries":{}},"sources":{"lib/safe-smart-account/contracts/common/StorageAccessible.sol":{"keccak256":"0x40a5f239d9639d4e44cb195a8a2a0022bb27840e282990e6776d8581515ca7ed","urls":["bzz-raw://22fa3b633e76e7d58736c841730a05f2c37a09f612e7e90dfd6c1f35722a9157","dweb:/ipfs/QmTFhMtHEKkdzQdVN9gayKdEJY69HWoM7abW2dXEuWXF6i"],"license":"LGPL-3.0-only"}},"version":1},"id":36}