{"abi":[{"type":"function","name":"calculateCreateProxyWithNonceAddress","inputs":[{"name":"_singleton","type":"address","internalType":"address"},{"name":"initializer","type":"bytes","internalType":"bytes"},{"name":"saltNonce","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"proxy","type":"address","internalType":"contract GnosisSafeProxy"}],"stateMutability":"nonpayable"},{"type":"function","name":"createProxy","inputs":[{"name":"singleton","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"proxy","type":"address","internalType":"contract GnosisSafeProxy"}],"stateMutability":"nonpayable"},{"type":"function","name":"createProxyWithCallback","inputs":[{"name":"_singleton","type":"address","internalType":"address"},{"name":"initializer","type":"bytes","internalType":"bytes"},{"name":"saltNonce","type":"uint256","internalType":"uint256"},{"name":"callback","type":"address","internalType":"contract IProxyCreationCallback"}],"outputs":[{"name":"proxy","type":"address","internalType":"contract GnosisSafeProxy"}],"stateMutability":"nonpayable"},{"type":"function","name":"createProxyWithNonce","inputs":[{"name":"_singleton","type":"address","internalType":"address"},{"name":"initializer","type":"bytes","internalType":"bytes"},{"name":"saltNonce","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"proxy","type":"address","internalType":"contract GnosisSafeProxy"}],"stateMutability":"nonpayable"},{"type":"function","name":"proxyCreationCode","inputs":[],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"proxyRuntimeCode","inputs":[],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"event","name":"ProxyCreation","inputs":[{"name":"proxy","type":"address","indexed":false,"internalType":"contract GnosisSafeProxy"},{"name":"singleton","type":"address","indexed":false,"internalType":"address"}],"anonymous":false}],"bytecode":{"object":"0x6080604052348015600f57600080fd5b50610a008061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80631688f0b9146100675780632500510e1461009757806353e5d935146100aa57806361b69abd146100bf578063addacc0f146100d2578063d18af54d146100da575b600080fd5b61007a61007536600461057b565b6100ed565b6040516001600160a01b0390911681526020015b60405180910390f35b61007a6100a53660046105d4565b610168565b6100b26101fd565b60405161008e91906106af565b61007a6100cd3660046106c9565b610227565b6100b26102d0565b61007a6100e8366004610719565b6102e2565b60006100fa8484846103b8565b83519091501561011e5760008060008551602087016000865af10361011e57600080fd5b604080516001600160a01b038084168252861660208201527f4f51faf6c4561ff95f067657e43439f0f856d97c04d9ec9070a6199ad418e235910160405180910390a19392505050565b60006101ac8585858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508792506103b8915050565b6040516bffffffffffffffffffffffff19606083901b16602082015290915060340160408051601f198184030181529082905262461bcd60e51b82526101f4916004016106af565b60405180910390fd5b60606040518060200161020f906104a7565b601f1982820381018352601f90910116604052919050565b600082604051610236906104a7565b6001600160a01b039091168152602001604051809103906000f080158015610262573d6000803e3d6000fd5b508251909150156102875760008060008451602086016000865af10361028757600080fd5b604080516001600160a01b038084168252851660208201527f4f51faf6c4561ff95f067657e43439f0f856d97c04d9ec9070a6199ad418e235910160405180910390a192915050565b60606040518060200161020f906104b4565b600080838360405160200161031392919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b6040516020818303038152906040528051906020012060001c90506103398686836100ed565b91506001600160a01b038316156103af576040516303ca56a360e31b81526001600160a01b03841690631e52b5189061037c9085908a908a908a90600401610785565b600060405180830381600087803b15801561039657600080fd5b505af11580156103aa573d6000803e3d6000fd5b505050505b50949350505050565b6000808380519060200120836040516020016103de929190918252602082015260400190565b604051602081830303815290604052805190602001209050600060405180602001610408906104a7565b601f1982820381018352601f90910116604081905261043591906001600160a01b038916906020016107c2565b6040516020818303038152906040529050818151826020016000f592506001600160a01b03831661049e5760405162461bcd60e51b815260206004820152601360248201527210dc99585d194c8818d85b1b0819985a5b1959606a1b60448201526064016101f4565b50509392505050565b61016b806107e583390190565b607b8061095083390190565b6001600160a01b03811681146104d557600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126104ff57600080fd5b813567ffffffffffffffff8082111561051a5761051a6104d8565b604051601f8301601f19908116603f01168101908282118183101715610542576105426104d8565b8160405283815286602085880101111561055b57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561059057600080fd5b833561059b816104c0565b9250602084013567ffffffffffffffff8111156105b757600080fd5b6105c3868287016104ee565b925050604084013590509250925092565b600080600080606085870312156105ea57600080fd5b84356105f5816104c0565b9350602085013567ffffffffffffffff8082111561061257600080fd5b818701915087601f83011261062657600080fd5b81358181111561063557600080fd5b88602082850101111561064757600080fd5b95986020929092019750949560400135945092505050565b60005b8381101561067a578181015183820152602001610662565b50506000910152565b6000815180845261069b81602086016020860161065f565b601f01601f19169290920160200192915050565b6020815260006106c26020830184610683565b9392505050565b600080604083850312156106dc57600080fd5b82356106e7816104c0565b9150602083013567ffffffffffffffff81111561070357600080fd5b61070f858286016104ee565b9150509250929050565b6000806000806080858703121561072f57600080fd5b843561073a816104c0565b9350602085013567ffffffffffffffff81111561075657600080fd5b610762878288016104ee565b93505060408501359150606085013561077a816104c0565b939692955090935050565b6001600160a01b038581168252841660208201526080604082018190526000906107b190830185610683565b905082606083015295945050505050565b600083516107d481846020880161065f565b919091019182525060200191905056fe6080604052348015600f57600080fd5b5060405161016b38038061016b833981016040819052602c9160b4565b6001600160a01b03811660905760405162461bcd60e51b815260206004820152602260248201527f496e76616c69642073696e676c65746f6e20616464726573732070726f766964604482015261195960f21b606482015260840160405180910390fd5b600080546001600160a01b0319166001600160a01b039290921691909117905560e2565b60006020828403121560c557600080fd5b81516001600160a01b038116811460db57600080fd5b9392505050565b607b806100f06000396000f3fe6080604052600080546001600160a01b0316632cf35bc960e11b823501602757808252602082f35b3682833781823684845af490503d82833e806040573d82fd5b503d81f3fea26469706673582212209d43101f27ff2ec84ccccd22bec3ba7f2fa4f668307d7f659346357dfb425d3464736f6c634300081900336080604052600080546001600160a01b0316632cf35bc960e11b823501602757808252602082f35b3682833781823684845af490503d82833e806040573d82fd5b503d81f3fea26469706673582212209d43101f27ff2ec84ccccd22bec3ba7f2fa4f668307d7f659346357dfb425d3464736f6c63430008190033a264697066735822122065c63948c3cb132db16d188920fd1fe84507082f98de1e411ee87b9077f27f6064736f6c63430008190033","sourceMap":"324:5502:41:-:0;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561001057600080fd5b50600436106100625760003560e01c80631688f0b9146100675780632500510e1461009757806353e5d935146100aa57806361b69abd146100bf578063addacc0f146100d2578063d18af54d146100da575b600080fd5b61007a61007536600461057b565b6100ed565b6040516001600160a01b0390911681526020015b60405180910390f35b61007a6100a53660046105d4565b610168565b6100b26101fd565b60405161008e91906106af565b61007a6100cd3660046106c9565b610227565b6100b26102d0565b61007a6100e8366004610719565b6102e2565b60006100fa8484846103b8565b83519091501561011e5760008060008551602087016000865af10361011e57600080fd5b604080516001600160a01b038084168252861660208201527f4f51faf6c4561ff95f067657e43439f0f856d97c04d9ec9070a6199ad418e235910160405180910390a19392505050565b60006101ac8585858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508792506103b8915050565b6040516bffffffffffffffffffffffff19606083901b16602082015290915060340160408051601f198184030181529082905262461bcd60e51b82526101f4916004016106af565b60405180910390fd5b60606040518060200161020f906104a7565b601f1982820381018352601f90910116604052919050565b600082604051610236906104a7565b6001600160a01b039091168152602001604051809103906000f080158015610262573d6000803e3d6000fd5b508251909150156102875760008060008451602086016000865af10361028757600080fd5b604080516001600160a01b038084168252851660208201527f4f51faf6c4561ff95f067657e43439f0f856d97c04d9ec9070a6199ad418e235910160405180910390a192915050565b60606040518060200161020f906104b4565b600080838360405160200161031392919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b6040516020818303038152906040528051906020012060001c90506103398686836100ed565b91506001600160a01b038316156103af576040516303ca56a360e31b81526001600160a01b03841690631e52b5189061037c9085908a908a908a90600401610785565b600060405180830381600087803b15801561039657600080fd5b505af11580156103aa573d6000803e3d6000fd5b505050505b50949350505050565b6000808380519060200120836040516020016103de929190918252602082015260400190565b604051602081830303815290604052805190602001209050600060405180602001610408906104a7565b601f1982820381018352601f90910116604081905261043591906001600160a01b038916906020016107c2565b6040516020818303038152906040529050818151826020016000f592506001600160a01b03831661049e5760405162461bcd60e51b815260206004820152601360248201527210dc99585d194c8818d85b1b0819985a5b1959606a1b60448201526064016101f4565b50509392505050565b61016b806107e583390190565b607b8061095083390190565b6001600160a01b03811681146104d557600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126104ff57600080fd5b813567ffffffffffffffff8082111561051a5761051a6104d8565b604051601f8301601f19908116603f01168101908282118183101715610542576105426104d8565b8160405283815286602085880101111561055b57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561059057600080fd5b833561059b816104c0565b9250602084013567ffffffffffffffff8111156105b757600080fd5b6105c3868287016104ee565b925050604084013590509250925092565b600080600080606085870312156105ea57600080fd5b84356105f5816104c0565b9350602085013567ffffffffffffffff8082111561061257600080fd5b818701915087601f83011261062657600080fd5b81358181111561063557600080fd5b88602082850101111561064757600080fd5b95986020929092019750949560400135945092505050565b60005b8381101561067a578181015183820152602001610662565b50506000910152565b6000815180845261069b81602086016020860161065f565b601f01601f19169290920160200192915050565b6020815260006106c26020830184610683565b9392505050565b600080604083850312156106dc57600080fd5b82356106e7816104c0565b9150602083013567ffffffffffffffff81111561070357600080fd5b61070f858286016104ee565b9150509250929050565b6000806000806080858703121561072f57600080fd5b843561073a816104c0565b9350602085013567ffffffffffffffff81111561075657600080fd5b610762878288016104ee565b93505060408501359150606085013561077a816104c0565b939692955090935050565b6001600160a01b038581168252841660208201526080604082018190526000906107b190830185610683565b905082606083015295945050505050565b600083516107d481846020880161065f565b919091019182525060200191905056fe6080604052348015600f57600080fd5b5060405161016b38038061016b833981016040819052602c9160b4565b6001600160a01b03811660905760405162461bcd60e51b815260206004820152602260248201527f496e76616c69642073696e676c65746f6e20616464726573732070726f766964604482015261195960f21b606482015260840160405180910390fd5b600080546001600160a01b0319166001600160a01b039290921691909117905560e2565b60006020828403121560c557600080fd5b81516001600160a01b038116811460db57600080fd5b9392505050565b607b806100f06000396000f3fe6080604052600080546001600160a01b0316632cf35bc960e11b823501602757808252602082f35b3682833781823684845af490503d82833e806040573d82fd5b503d81f3fea26469706673582212209d43101f27ff2ec84ccccd22bec3ba7f2fa4f668307d7f659346357dfb425d3464736f6c634300081900336080604052600080546001600160a01b0316632cf35bc960e11b823501602757808252602082f35b3682833781823684845af490503d82833e806040573d82fd5b503d81f3fea26469706673582212209d43101f27ff2ec84ccccd22bec3ba7f2fa4f668307d7f659346357dfb425d3464736f6c63430008190033a264697066735822122065c63948c3cb132db16d188920fd1fe84507082f98de1e411ee87b9077f27f6064736f6c63430008190033","sourceMap":"324:5502:41:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3268:576;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1730:32:49;;;1712:51;;1700:2;1685:18;3268:576:41;;;;;;;;5510:314;;;;;;:::i;:::-;;:::i;1548:122::-;;;:::i;:::-;;;;;;;:::i;675:462::-;;;;;;:::i;:::-;;:::i;1277:120::-;;;:::i;4382:511::-;;;;;;:::i;:::-;;:::i;3268:576::-;3409:21;3450:56;3471:10;3483:11;3496:9;3450:20;:56::i;:::-;3520:18;;3442:64;;-1:-1:-1;3520:22:41;3516:275;;3722:1;3718;3715;3701:11;3695:18;3688:4;3675:11;3671:22;3668:1;3661:5;3654;3649:71;3646:78;3643:134;;3757:1;3754;3747:12;3643:134;3805:32;;;-1:-1:-1;;;;;4750:15:49;;;4732:34;;4802:15;;4797:2;4782:18;;4775:43;3805:32:41;;4667:18:49;3805:32:41;;;;;;;3268:576;;;;;:::o;5510:314::-;5671:21;5712:56;5733:10;5745:11;;5712:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5758:9:41;;-1:-1:-1;5712:20:41;;-1:-1:-1;;5712:56:41:i;:::-;5792:23;;-1:-1:-1;;5011:2:49;5007:15;;;5003:53;5792:23:41;;;4991:66:49;5704:64:41;;-1:-1:-1;5073:12:49;;5792:23:41;;;-1:-1:-1;;5792:23:41;;;;;;;;;;-1:-1:-1;;;5778:39:41;;;;;;;:::i;:::-;;;;;;;;1548:122;1598:12;1629:34;;;;;;;;:::i;:::-;-1:-1:-1;;1629:34:41;;;;;;;;;;;;;;;1548:122;-1:-1:-1;1548:122:41:o;675:462::-;750:21;811:9;791:30;;;;;:::i;:::-;-1:-1:-1;;;;;1730:32:49;;;1712:51;;1700:2;1685:18;791:30:41;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;835:11:41;;783:38;;-1:-1:-1;835:15:41;831:254;;1016:1;1012;1009;1002:4;996:11;989:4;983;979:15;976:1;969:5;962;957:57;954:64;951:120;;1051:1;1048;1041:12;951:120;1099:31;;;-1:-1:-1;;;;;4750:15:49;;;4732:34;;4802:15;;4797:2;4782:18;;4775:43;1099:31:41;;4667:18:49;1099:31:41;;;;;;;675:462;;;;:::o;1277:120::-;1326:12;1357:33;;;;;;;;:::i;4382:511::-;4567:21;4600:29;4667:9;4678:8;4650:37;;;;;;;;5717:19:49;;;5774:2;5770:15;-1:-1:-1;;5766:53:49;5761:2;5752:12;;5745:75;5845:2;5836:12;;5528:326;4650:37:41;;;;;;;;;;;;;4640:48;;;;;;4632:57;;4600:89;;4707:68;4728:10;4740:11;4753:21;4707:20;:68::i;:::-;4699:76;-1:-1:-1;;;;;;4789:31:41;;;4785:101;;4822:64;;-1:-1:-1;;;4822:64:41;;-1:-1:-1;;;;;4822:21:41;;;;;:64;;4844:5;;4851:10;;4863:11;;4876:9;;4822:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4785:101;4590:303;4382:511;;;;;;:::o;2118:769::-;2261:21;2436:12;2488:11;2478:22;;;;;;2502:9;2461:51;;;;;;;;6542:19:49;;;6586:2;6577:12;;6570:28;6623:2;6614:12;;6385:247;2461:51:41;;;;;;;;;;;;;2451:62;;;;;;2436:77;;2523:27;2570:34;;;;;;;;:::i;:::-;-1:-1:-1;;2570:34:41;;;;;;;;;;;;;;;;2553:82;;2570:34;-1:-1:-1;;;;;2606:28:41;;;2570:34;2553:82;;:::i;:::-;;;;;;;;;;;;;2523:112;;2796:4;2779:14;2773:21;2756:14;2750:4;2746:25;2741:3;2733:68;2724:77;-1:-1:-1;;;;;;2828:28:41;;2820:60;;;;-1:-1:-1;;;2820:60:41;;7227:2:49;2820:60:41;;;7209:21:49;7266:2;7246:18;;;7239:30;-1:-1:-1;;;7285:18:49;;;7278:49;7344:18;;2820:60:41;7025:343:49;2820:60:41;2284:603;;2118:769;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:131:49:-;-1:-1:-1;;;;;89:31:49;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:127::-;211:10;206:3;202:20;199:1;192:31;242:4;239:1;232:15;266:4;263:1;256:15;282:718;324:5;377:3;370:4;362:6;358:17;354:27;344:55;;395:1;392;385:12;344:55;431:6;418:20;457:18;494:2;490;487:10;484:36;;;500:18;;:::i;:::-;575:2;569:9;543:2;629:13;;-1:-1:-1;;625:22:49;;;649:2;621:31;617:40;605:53;;;673:18;;;693:22;;;670:46;667:72;;;719:18;;:::i;:::-;759:10;755:2;748:22;794:2;786:6;779:18;840:3;833:4;828:2;820:6;816:15;812:26;809:35;806:55;;;857:1;854;847:12;806:55;921:2;914:4;906:6;902:17;895:4;887:6;883:17;870:54;968:1;961:4;956:2;948:6;944:15;940:26;933:37;988:6;979:15;;;;;;282:718;;;;:::o;1005:523::-;1091:6;1099;1107;1160:2;1148:9;1139:7;1135:23;1131:32;1128:52;;;1176:1;1173;1166:12;1128:52;1215:9;1202:23;1234:31;1259:5;1234:31;:::i;:::-;1284:5;-1:-1:-1;1340:2:49;1325:18;;1312:32;1367:18;1356:30;;1353:50;;;1399:1;1396;1389:12;1353:50;1422:49;1463:7;1454:6;1443:9;1439:22;1422:49;:::i;:::-;1412:59;;;1518:2;1507:9;1503:18;1490:32;1480:42;;1005:523;;;;;:::o;1774:794::-;1862:6;1870;1878;1886;1939:2;1927:9;1918:7;1914:23;1910:32;1907:52;;;1955:1;1952;1945:12;1907:52;1994:9;1981:23;2013:31;2038:5;2013:31;:::i;:::-;2063:5;-1:-1:-1;2119:2:49;2104:18;;2091:32;2142:18;2172:14;;;2169:34;;;2199:1;2196;2189:12;2169:34;2237:6;2226:9;2222:22;2212:32;;2282:7;2275:4;2271:2;2267:13;2263:27;2253:55;;2304:1;2301;2294:12;2253:55;2344:2;2331:16;2370:2;2362:6;2359:14;2356:34;;;2386:1;2383;2376:12;2356:34;2431:7;2426:2;2417:6;2413:2;2409:15;2405:24;2402:37;2399:57;;;2452:1;2449;2442:12;2399:57;1774:794;;2483:2;2475:11;;;;;-1:-1:-1;2505:6:49;;2558:2;2543:18;2530:32;;-1:-1:-1;1774:794:49;-1:-1:-1;;;1774:794:49:o;2573:250::-;2658:1;2668:113;2682:6;2679:1;2676:13;2668:113;;;2758:11;;;2752:18;2739:11;;;2732:39;2704:2;2697:10;2668:113;;;-1:-1:-1;;2815:1:49;2797:16;;2790:27;2573:250::o;2828:270::-;2869:3;2907:5;2901:12;2934:6;2929:3;2922:19;2950:76;3019:6;3012:4;3007:3;3003:14;2996:4;2989:5;2985:16;2950:76;:::i;:::-;3080:2;3059:15;-1:-1:-1;;3055:29:49;3046:39;;;;3087:4;3042:50;;2828:270;-1:-1:-1;;2828:270:49:o;3103:217::-;3250:2;3239:9;3232:21;3213:4;3270:44;3310:2;3299:9;3295:18;3287:6;3270:44;:::i;:::-;3262:52;3103:217;-1:-1:-1;;;3103:217:49:o;3325:455::-;3402:6;3410;3463:2;3451:9;3442:7;3438:23;3434:32;3431:52;;;3479:1;3476;3469:12;3431:52;3518:9;3505:23;3537:31;3562:5;3537:31;:::i;:::-;3587:5;-1:-1:-1;3643:2:49;3628:18;;3615:32;3670:18;3659:30;;3656:50;;;3702:1;3699;3692:12;3656:50;3725:49;3766:7;3757:6;3746:9;3742:22;3725:49;:::i;:::-;3715:59;;;3325:455;;;;;:::o;3785:697::-;3912:6;3920;3928;3936;3989:3;3977:9;3968:7;3964:23;3960:33;3957:53;;;4006:1;4003;3996:12;3957:53;4045:9;4032:23;4064:31;4089:5;4064:31;:::i;:::-;4114:5;-1:-1:-1;4170:2:49;4155:18;;4142:32;4197:18;4186:30;;4183:50;;;4229:1;4226;4219:12;4183:50;4252:49;4293:7;4284:6;4273:9;4269:22;4252:49;:::i;:::-;4242:59;;;4348:2;4337:9;4333:18;4320:32;4310:42;;4404:2;4393:9;4389:18;4376:32;4417:33;4442:7;4417:33;:::i;:::-;3785:697;;;;-1:-1:-1;3785:697:49;;-1:-1:-1;;3785:697:49:o;5859:521::-;-1:-1:-1;;;;;6161:15:49;;;6143:34;;6213:15;;6208:2;6193:18;;6186:43;6265:3;6260:2;6245:18;;6238:31;;;6086:4;;6286:45;;6311:19;;6303:6;6286:45;:::i;:::-;6278:53;;6367:6;6362:2;6351:9;6347:18;6340:34;5859:521;;;;;;;:::o;6637:383::-;6794:3;6832:6;6826:13;6848:66;6907:6;6902:3;6895:4;6887:6;6883:17;6848:66;:::i;:::-;6936:16;;;;6961:21;;;-1:-1:-1;7009:4:49;6998:16;;6637:383;-1:-1:-1;6637:383:49:o","linkReferences":{}},"methodIdentifiers":{"calculateCreateProxyWithNonceAddress(address,bytes,uint256)":"2500510e","createProxy(address,bytes)":"61b69abd","createProxyWithCallback(address,bytes,uint256,address)":"d18af54d","createProxyWithNonce(address,bytes,uint256)":"1688f0b9","proxyCreationCode()":"53e5d935","proxyRuntimeCode()":"addacc0f"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract GnosisSafeProxy\",\"name\":\"proxy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"singleton\",\"type\":\"address\"}],\"name\":\"ProxyCreation\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_singleton\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initializer\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"saltNonce\",\"type\":\"uint256\"}],\"name\":\"calculateCreateProxyWithNonceAddress\",\"outputs\":[{\"internalType\":\"contract GnosisSafeProxy\",\"name\":\"proxy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"singleton\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"createProxy\",\"outputs\":[{\"internalType\":\"contract GnosisSafeProxy\",\"name\":\"proxy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_singleton\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initializer\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"saltNonce\",\"type\":\"uint256\"},{\"internalType\":\"contract IProxyCreationCallback\",\"name\":\"callback\",\"type\":\"address\"}],\"name\":\"createProxyWithCallback\",\"outputs\":[{\"internalType\":\"contract GnosisSafeProxy\",\"name\":\"proxy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_singleton\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initializer\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"saltNonce\",\"type\":\"uint256\"}],\"name\":\"createProxyWithNonce\",\"outputs\":[{\"internalType\":\"contract GnosisSafeProxy\",\"name\":\"proxy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxyCreationCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxyRuntimeCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Stefan George - <stefan@gnosis.pm>\",\"kind\":\"dev\",\"methods\":{\"calculateCreateProxyWithNonceAddress(address,bytes,uint256)\":{\"details\":\"Allows to get the address for a new proxy contact created via `createProxyWithNonce`      This method is only meant for address calculation purpose when you use an initializer that would revert,      therefore the response is returned with a revert. When calling this method set `from` to the address of the proxy factory.\",\"params\":{\"_singleton\":\"Address of singleton contract.\",\"initializer\":\"Payload for message call sent to new proxy contract.\",\"saltNonce\":\"Nonce that will be used to generate the salt to calculate the address of the new proxy contract.\"}},\"createProxy(address,bytes)\":{\"details\":\"Allows to create new proxy contact and execute a message call to the new proxy within one transaction.\",\"params\":{\"data\":\"Payload for message call sent to new proxy contract.\",\"singleton\":\"Address of singleton contract.\"}},\"createProxyWithCallback(address,bytes,uint256,address)\":{\"details\":\"Allows to create new proxy contact, execute a message call to the new proxy and call a specified callback within one transaction\",\"params\":{\"_singleton\":\"Address of singleton contract.\",\"callback\":\"Callback that will be invoked after the new proxy contract has been successfully deployed and initialized.\",\"initializer\":\"Payload for message call sent to new proxy contract.\",\"saltNonce\":\"Nonce that will be used to generate the salt to calculate the address of the new proxy contract.\"}},\"createProxyWithNonce(address,bytes,uint256)\":{\"details\":\"Allows to create new proxy contact and execute a message call to the new proxy within one transaction.\",\"params\":{\"_singleton\":\"Address of singleton contract.\",\"initializer\":\"Payload for message call sent to new proxy contract.\",\"saltNonce\":\"Nonce that will be used to generate the salt to calculate the address of the new proxy contract.\"}},\"proxyCreationCode()\":{\"details\":\"Allows to retrieve the creation code used for the Proxy deployment. With this it is easily possible to calculate predicted address.\"},\"proxyRuntimeCode()\":{\"details\":\"Allows to retrieve the runtime code of a deployed Proxy. This can be used to check that the expected Proxy was deployed.\"}},\"title\":\"Proxy Factory - Allows to create new proxy contact and execute a message call to the new proxy within one transaction.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/safe-smart-account/contracts/proxies/GnosisSafeProxyFactory.sol\":\"GnosisSafeProxyFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/solmate/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-smart-account/=lib/safe-smart-account/contracts/\",\":solady/=lib/solady/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/safe-smart-account/contracts/proxies/GnosisSafeProxy.sol\":{\"keccak256\":\"0x3bfdd453d9f896f7029d15bcafd11886957b320ad1764309d9f74fa059715249\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://5b5b7d0c8a900ba758e012236bf1c55e885fe5716aa79f6f693d22c31c85f7d5\",\"dweb:/ipfs/QmUq5oNsZY1b5pcYAzrY1i9oqyPUaiFhLaEWgB9ML6LrBj\"]},\"lib/safe-smart-account/contracts/proxies/GnosisSafeProxyFactory.sol\":{\"keccak256\":\"0x052c666960769f09f863f91ec2b0ba3eb12336b6f7db0e084fc202861be53210\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://72ef172eabedce404ed187ba215a6806b663e2897d2de7b8a3ed9325e0f8e09c\",\"dweb:/ipfs/QmfY514VBUshk8atU1jAwjhh9aNDumcnKNosT49vPj621y\"]},\"lib/safe-smart-account/contracts/proxies/IProxyCreationCallback.sol\":{\"keccak256\":\"0x51a9ce914a6a943651c803541e44218a7ed0a2f98a94d55df66b173b5a11e365\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://5216ed8181c14d462ec821593c8f90f33c7dbe8b4c505a1092bf31a9d33132b9\",\"dweb:/ipfs/Qmbb2wkgijuTcEbGR7CnmiAtwZDyruQ2b1ged4HnLysQnT\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.25+commit.b61c2a91"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"contract GnosisSafeProxy","name":"proxy","type":"address","indexed":false},{"internalType":"address","name":"singleton","type":"address","indexed":false}],"type":"event","name":"ProxyCreation","anonymous":false},{"inputs":[{"internalType":"address","name":"_singleton","type":"address"},{"internalType":"bytes","name":"initializer","type":"bytes"},{"internalType":"uint256","name":"saltNonce","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"calculateCreateProxyWithNonceAddress","outputs":[{"internalType":"contract GnosisSafeProxy","name":"proxy","type":"address"}]},{"inputs":[{"internalType":"address","name":"singleton","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"createProxy","outputs":[{"internalType":"contract GnosisSafeProxy","name":"proxy","type":"address"}]},{"inputs":[{"internalType":"address","name":"_singleton","type":"address"},{"internalType":"bytes","name":"initializer","type":"bytes"},{"internalType":"uint256","name":"saltNonce","type":"uint256"},{"internalType":"contract IProxyCreationCallback","name":"callback","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"createProxyWithCallback","outputs":[{"internalType":"contract GnosisSafeProxy","name":"proxy","type":"address"}]},{"inputs":[{"internalType":"address","name":"_singleton","type":"address"},{"internalType":"bytes","name":"initializer","type":"bytes"},{"internalType":"uint256","name":"saltNonce","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createProxyWithNonce","outputs":[{"internalType":"contract GnosisSafeProxy","name":"proxy","type":"address"}]},{"inputs":[],"stateMutability":"pure","type":"function","name":"proxyCreationCode","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[],"stateMutability":"pure","type":"function","name":"proxyRuntimeCode","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]}],"devdoc":{"kind":"dev","methods":{"calculateCreateProxyWithNonceAddress(address,bytes,uint256)":{"details":"Allows to get the address for a new proxy contact created via `createProxyWithNonce`      This method is only meant for address calculation purpose when you use an initializer that would revert,      therefore the response is returned with a revert. When calling this method set `from` to the address of the proxy factory.","params":{"_singleton":"Address of singleton contract.","initializer":"Payload for message call sent to new proxy contract.","saltNonce":"Nonce that will be used to generate the salt to calculate the address of the new proxy contract."}},"createProxy(address,bytes)":{"details":"Allows to create new proxy contact and execute a message call to the new proxy within one transaction.","params":{"data":"Payload for message call sent to new proxy contract.","singleton":"Address of singleton contract."}},"createProxyWithCallback(address,bytes,uint256,address)":{"details":"Allows to create new proxy contact, execute a message call to the new proxy and call a specified callback within one transaction","params":{"_singleton":"Address of singleton contract.","callback":"Callback that will be invoked after the new proxy contract has been successfully deployed and initialized.","initializer":"Payload for message call sent to new proxy contract.","saltNonce":"Nonce that will be used to generate the salt to calculate the address of the new proxy contract."}},"createProxyWithNonce(address,bytes,uint256)":{"details":"Allows to create new proxy contact and execute a message call to the new proxy within one transaction.","params":{"_singleton":"Address of singleton contract.","initializer":"Payload for message call sent to new proxy contract.","saltNonce":"Nonce that will be used to generate the salt to calculate the address of the new proxy contract."}},"proxyCreationCode()":{"details":"Allows to retrieve the creation code used for the Proxy deployment. With this it is easily possible to calculate predicted address."},"proxyRuntimeCode()":{"details":"Allows to retrieve the runtime code of a deployed Proxy. This can be used to check that the expected Proxy was deployed."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/solmate/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","safe-smart-account/=lib/safe-smart-account/contracts/","solady/=lib/solady/src/","solmate/=lib/solmate/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/safe-smart-account/contracts/proxies/GnosisSafeProxyFactory.sol":"GnosisSafeProxyFactory"},"evmVersion":"paris","libraries":{}},"sources":{"lib/safe-smart-account/contracts/proxies/GnosisSafeProxy.sol":{"keccak256":"0x3bfdd453d9f896f7029d15bcafd11886957b320ad1764309d9f74fa059715249","urls":["bzz-raw://5b5b7d0c8a900ba758e012236bf1c55e885fe5716aa79f6f693d22c31c85f7d5","dweb:/ipfs/QmUq5oNsZY1b5pcYAzrY1i9oqyPUaiFhLaEWgB9ML6LrBj"],"license":"LGPL-3.0-only"},"lib/safe-smart-account/contracts/proxies/GnosisSafeProxyFactory.sol":{"keccak256":"0x052c666960769f09f863f91ec2b0ba3eb12336b6f7db0e084fc202861be53210","urls":["bzz-raw://72ef172eabedce404ed187ba215a6806b663e2897d2de7b8a3ed9325e0f8e09c","dweb:/ipfs/QmfY514VBUshk8atU1jAwjhh9aNDumcnKNosT49vPj621y"],"license":"LGPL-3.0-only"},"lib/safe-smart-account/contracts/proxies/IProxyCreationCallback.sol":{"keccak256":"0x51a9ce914a6a943651c803541e44218a7ed0a2f98a94d55df66b173b5a11e365","urls":["bzz-raw://5216ed8181c14d462ec821593c8f90f33c7dbe8b4c505a1092bf31a9d33132b9","dweb:/ipfs/Qmbb2wkgijuTcEbGR7CnmiAtwZDyruQ2b1ged4HnLysQnT"],"license":"LGPL-3.0-only"}},"version":1},"id":41}