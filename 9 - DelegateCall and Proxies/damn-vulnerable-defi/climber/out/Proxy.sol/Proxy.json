{"abi":[{"type":"fallback","stateMutability":"payable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@openzeppelin/foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":ds-test/=lib/solmate/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":solady/=lib/solady/src/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.25+commit.b61c2a91"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"payable","type":"fallback"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@openzeppelin/foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/","ds-test/=lib/solmate/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/","solady/=lib/solady/src/","solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/","solmate/=lib/solmate/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol":"Proxy"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol":{"keccak256":"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd","urls":["bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac","dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[],"types":{}},"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol","id":48377,"exportedSymbols":{"Proxy":[48376]},"nodeType":"SourceUnit","src":"99:2571:34","nodes":[{"id":48342,"nodeType":"PragmaDirective","src":"99:24:34","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":48376,"nodeType":"ContractDefinition","src":"724:1945:34","nodes":[{"id":48351,"nodeType":"FunctionDefinition","src":"949:895:34","nodes":[],"body":{"id":48350,"nodeType":"Block","src":"1009:835:34","nodes":[],"statements":[{"AST":{"nativeSrc":"1028:810:34","nodeType":"YulBlock","src":"1028:810:34","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1281:1:34","nodeType":"YulLiteral","src":"1281:1:34","type":"","value":"0"},{"kind":"number","nativeSrc":"1284:1:34","nodeType":"YulLiteral","src":"1284:1:34","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"1287:12:34","nodeType":"YulIdentifier","src":"1287:12:34"},"nativeSrc":"1287:14:34","nodeType":"YulFunctionCall","src":"1287:14:34"}],"functionName":{"name":"calldatacopy","nativeSrc":"1268:12:34","nodeType":"YulIdentifier","src":"1268:12:34"},"nativeSrc":"1268:34:34","nodeType":"YulFunctionCall","src":"1268:34:34"},"nativeSrc":"1268:34:34","nodeType":"YulExpressionStatement","src":"1268:34:34"},{"nativeSrc":"1429:74:34","nodeType":"YulVariableDeclaration","src":"1429:74:34","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"1456:3:34","nodeType":"YulIdentifier","src":"1456:3:34"},"nativeSrc":"1456:5:34","nodeType":"YulFunctionCall","src":"1456:5:34"},{"name":"implementation","nativeSrc":"1463:14:34","nodeType":"YulIdentifier","src":"1463:14:34"},{"kind":"number","nativeSrc":"1479:1:34","nodeType":"YulLiteral","src":"1479:1:34","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"1482:12:34","nodeType":"YulIdentifier","src":"1482:12:34"},"nativeSrc":"1482:14:34","nodeType":"YulFunctionCall","src":"1482:14:34"},{"kind":"number","nativeSrc":"1498:1:34","nodeType":"YulLiteral","src":"1498:1:34","type":"","value":"0"},{"kind":"number","nativeSrc":"1501:1:34","nodeType":"YulLiteral","src":"1501:1:34","type":"","value":"0"}],"functionName":{"name":"delegatecall","nativeSrc":"1443:12:34","nodeType":"YulIdentifier","src":"1443:12:34"},"nativeSrc":"1443:60:34","nodeType":"YulFunctionCall","src":"1443:60:34"},"variables":[{"name":"result","nativeSrc":"1433:6:34","nodeType":"YulTypedName","src":"1433:6:34","type":""}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1571:1:34","nodeType":"YulLiteral","src":"1571:1:34","type":"","value":"0"},{"kind":"number","nativeSrc":"1574:1:34","nodeType":"YulLiteral","src":"1574:1:34","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"1577:14:34","nodeType":"YulIdentifier","src":"1577:14:34"},"nativeSrc":"1577:16:34","nodeType":"YulFunctionCall","src":"1577:16:34"}],"functionName":{"name":"returndatacopy","nativeSrc":"1556:14:34","nodeType":"YulIdentifier","src":"1556:14:34"},"nativeSrc":"1556:38:34","nodeType":"YulFunctionCall","src":"1556:38:34"},"nativeSrc":"1556:38:34","nodeType":"YulExpressionStatement","src":"1556:38:34"},{"cases":[{"body":{"nativeSrc":"1689:59:34","nodeType":"YulBlock","src":"1689:59:34","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1714:1:34","nodeType":"YulLiteral","src":"1714:1:34","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"1717:14:34","nodeType":"YulIdentifier","src":"1717:14:34"},"nativeSrc":"1717:16:34","nodeType":"YulFunctionCall","src":"1717:16:34"}],"functionName":{"name":"revert","nativeSrc":"1707:6:34","nodeType":"YulIdentifier","src":"1707:6:34"},"nativeSrc":"1707:27:34","nodeType":"YulFunctionCall","src":"1707:27:34"},"nativeSrc":"1707:27:34","nodeType":"YulExpressionStatement","src":"1707:27:34"}]},"nativeSrc":"1682:66:34","nodeType":"YulCase","src":"1682:66:34","value":{"kind":"number","nativeSrc":"1687:1:34","nodeType":"YulLiteral","src":"1687:1:34","type":"","value":"0"}},{"body":{"nativeSrc":"1769:59:34","nodeType":"YulBlock","src":"1769:59:34","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1794:1:34","nodeType":"YulLiteral","src":"1794:1:34","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"1797:14:34","nodeType":"YulIdentifier","src":"1797:14:34"},"nativeSrc":"1797:16:34","nodeType":"YulFunctionCall","src":"1797:16:34"}],"functionName":{"name":"return","nativeSrc":"1787:6:34","nodeType":"YulIdentifier","src":"1787:6:34"},"nativeSrc":"1787:27:34","nodeType":"YulFunctionCall","src":"1787:27:34"},"nativeSrc":"1787:27:34","nodeType":"YulExpressionStatement","src":"1787:27:34"}]},"nativeSrc":"1761:67:34","nodeType":"YulCase","src":"1761:67:34","value":"default"}],"expression":{"name":"result","nativeSrc":"1615:6:34","nodeType":"YulIdentifier","src":"1615:6:34"},"nativeSrc":"1608:220:34","nodeType":"YulSwitch","src":"1608:220:34"}]},"evmVersion":"cancun","externalReferences":[{"declaration":48346,"isOffset":false,"isSlot":false,"src":"1463:14:34","valueSize":1}],"id":48349,"nodeType":"InlineAssembly","src":"1019:819:34"}]},"documentation":{"id":48344,"nodeType":"StructuredDocumentation","src":"754:190:34","text":" @dev Delegates the current call to `implementation`.\n This function does not return to its internal call site, it will return directly to the external caller."},"implemented":true,"kind":"function","modifiers":[],"name":"_delegate","nameLocation":"958:9:34","parameters":{"id":48347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48346,"mutability":"mutable","name":"implementation","nameLocation":"976:14:34","nodeType":"VariableDeclaration","scope":48351,"src":"968:22:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48345,"name":"address","nodeType":"ElementaryTypeName","src":"968:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"967:24:34"},"returnParameters":{"id":48348,"nodeType":"ParameterList","parameters":[],"src":"1009:0:34"},"scope":48376,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":48357,"nodeType":"FunctionDefinition","src":"2028:67:34","nodes":[],"documentation":{"id":48352,"nodeType":"StructuredDocumentation","src":"1850:173:34","text":" @dev This is a virtual function that should be overridden so it returns the address to which the fallback\n function and {_fallback} should delegate."},"implemented":false,"kind":"function","modifiers":[],"name":"_implementation","nameLocation":"2037:15:34","parameters":{"id":48353,"nodeType":"ParameterList","parameters":[],"src":"2052:2:34"},"returnParameters":{"id":48356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48355,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":48357,"src":"2086:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48354,"name":"address","nodeType":"ElementaryTypeName","src":"2086:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2085:9:34"},"scope":48376,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":48367,"nodeType":"FunctionDefinition","src":"2323:83:34","nodes":[],"body":{"id":48366,"nodeType":"Block","src":"2361:45:34","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":48362,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48357,"src":"2381:15:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2381:17:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":48361,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48351,"src":"2371:9:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":48364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2371:28:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48365,"nodeType":"ExpressionStatement","src":"2371:28:34"}]},"documentation":{"id":48358,"nodeType":"StructuredDocumentation","src":"2101:217:34","text":" @dev Delegates the current call to the address returned by `_implementation()`.\n This function does not return to its internal call site, it will return directly to the external caller."},"implemented":true,"kind":"function","modifiers":[],"name":"_fallback","nameLocation":"2332:9:34","parameters":{"id":48359,"nodeType":"ParameterList","parameters":[],"src":"2341:2:34"},"returnParameters":{"id":48360,"nodeType":"ParameterList","parameters":[],"src":"2361:0:34"},"scope":48376,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":48375,"nodeType":"FunctionDefinition","src":"2603:64:34","nodes":[],"body":{"id":48374,"nodeType":"Block","src":"2639:28:34","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":48371,"name":"_fallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48367,"src":"2649:9:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":48372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2649:11:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48373,"nodeType":"ExpressionStatement","src":"2649:11:34"}]},"documentation":{"id":48368,"nodeType":"StructuredDocumentation","src":"2412:186:34","text":" @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n function in the contract matches the call data."},"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":48369,"nodeType":"ParameterList","parameters":[],"src":"2611:2:34"},"returnParameters":{"id":48370,"nodeType":"ParameterList","parameters":[],"src":"2639:0:34"},"scope":48376,"stateMutability":"payable","virtual":true,"visibility":"external"}],"abstract":true,"baseContracts":[],"canonicalName":"Proxy","contractDependencies":[],"contractKind":"contract","documentation":{"id":48343,"nodeType":"StructuredDocumentation","src":"125:598:34","text":" @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n be specified by overriding the virtual {_implementation} function.\n Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n different contract through the {_delegate} function.\n The success and return data of the delegated call will be returned back to the caller of the proxy."},"fullyImplemented":false,"linearizedBaseContracts":[48376],"name":"Proxy","nameLocation":"742:5:34","scope":48377,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":34}