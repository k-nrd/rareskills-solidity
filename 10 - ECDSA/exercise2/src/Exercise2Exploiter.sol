// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import {ECDSA} from "@openzeppelin/contracts/utils/cryptography/ECDSA.sol";
import {Exercise2} from "./Exercise2.sol";

contract Exercise2Exploiter {
    function attack(Exercise2 _victim) external {
        // Found here https://optimistic.etherscan.io/tx/0x08e18539b6a2b45c74aa3eb4bc769a173baf87b3373437123c9498d72f02c2e2
        bytes32 r = 0xe5d0b13209c030a26b72ddb84866ae7b32f806d64f28136cb5516ab6ca15d3c4;
        bytes32 s = 0x38d9e7c79efa063198fda1a5b48e878a954d79372ed71922003f847029bf2e75;
        uint8 v = 27;

        string memory message = "attack at dawn";
        bytes memory signature = abi.encodePacked(r, s, v);

        _victim.challenge(message, signature);
    }
}
